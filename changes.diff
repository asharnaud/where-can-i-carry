diff --git a/package.json b/package.json
index 38fff05..994d1a1 100644
--- a/package.json
+++ b/package.json
@@ -4,7 +4,8 @@
   "private": true,
   "dependencies": {
     "inferno": "3.6.4",
-    "inferno-component": "3.6.4",
+    "inferno-component": "^3.6.4",
+    "mori": "0.3.2",
     "zepto": "1.2.0"
   },
   "devDependencies": {
diff --git a/public/index.html b/public/index.html
index 4caec89..a9d0255 100644
--- a/public/index.html
+++ b/public/index.html
@@ -16,33 +16,10 @@
     -->
     <title>wherecanicarry.com - Find places where guns are allowed or not</title>
   <body>
-      <div id="map" class="map"></div>
-      <div class="side-bar">
-        <div class="header-container">
-          <i class="fa fa-map-marker" aria-hidden="true"></i>
-          <p>Where Can I Carry?</p>
-        </div>
-        <div class="checkbox-container">
-          <input type="checkbox"/>
-          <label class="checkbox-item"> Open Carry <i class="fa fa-thumbs-o-up" aria-hidden="true"></i>
-          </br>
-          <input type="checkbox"/>
-          <label class="checkbox-item"> Concealed Carry <i class="fa fa-thumbs-o-up" aria-hidden="true"></i>
-          </br>
-          <input type="checkbox"/>
-          <label class="checkbox-item"> Open Carry <i class="fa fa-ban" aria-hidden="true"></i>
-          </br>
-          <input type="checkbox"/>
-          <label class="checkbox-item"> Concealed Carry <i class="fa fa-ban" aria-hidden="true"></i>
-        </div>
-        <div id="app"></div>
-      </div>
-      <footer class="footer"></footer>
+      <div id="mapContainer" class="map"></div>
+      <div id="appContainer"></div>
     <script async defer
-    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC67l8WPqxwg_Acx1XMIfKR3_VEFHVlbyI&callback=window.INIT_GMAP">
-    </script>
-    <script>
-    console.log('INDEX reload')
+    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC67l8WPqxwg_Acx1XMIfKR3_VEFHVlbyI&callback=window.GMAP_SCRIPT_LOADED">
     </script>
     <noscript>
       You need to enable JavaScript to run this app.
diff --git a/src/App.js b/src/App.js
index b50b9a5..2c7f502 100644
--- a/src/App.js
+++ b/src/App.js
@@ -1,55 +1,23 @@
-import Component from 'inferno-component'
-import './index.css'
-import appState from './index.js'
+import mori from 'mori'
+import MoriComponent from './mori-component'
+import Modal from './modal.js'
+import SideBar from './sidebar.js'
+// import HamburgerMenu from './menu.js'
 
-function App () {
-  return (
-    <div>
-      {Modal(appState)}
-    </div>
-  )
-}
+class App extends MoriComponent {
+  render () {
+    let modalComponent = null
+    if (mori.get(this.props.imdata, 'isModalShowing')) {
+      modalComponent = <Modal imdata={this.props.imdata} />
+    }
 
-function Modal (appState) {
-  function showModal () {
-    appState.classes = 'modal-show'
-    console.log(appState.classes)
-  }
-  function hideModal () {
-    appState.classes = 'modal-hide'
-  }
-  return (
-    <div>
-      <button class='add-location-btn' onClick={showModal}><span>Add Location</span></button>
-      <div className={appState.classes}>
-        <div className='modal-content'>
-          <button className='close' onClick={hideModal}>Close</button>
-          <div className='modal-header'>
-            <h2>Add Location</h2>
-          </div>
-          <div className='modal-body'>
-            <form>
-              <label>
-              First Name:
-              <input type='text' name='fname' />
-              </label>
-              <label>
-              Last Name:
-              <input type='text' name='lname' />
-              </label>
-              <label>
-              Email:
-              <input type='text' email='email' />
-              </label>
-              <input type='submit' value='Submit' />
-            </form>
-            <div id='map2' className='add-location-map'>
-            </div>
-          </div>
-        </div>
+    return (
+      <div>
+        <SideBar imdata={this.props.imdata} />
+        {modalComponent}
       </div>
-    </div>
-  )
+    )
+  }
 }
 
 export default App
diff --git a/src/index.css b/src/index.css
index c2fa450..f4997ce 100644
--- a/src/index.css
+++ b/src/index.css
@@ -12,21 +12,23 @@ body {
 
 .map {
   height: 100%;
+  border-left: 70px solid black;
 }
 
 .side-bar {
-  margin-top: 6%;
   background-color: black;
   border: 1px solid black;
   color: white;
   height: 50%;
-  opacity: .8;
+  margin-top: 6%;
+  min-width: 150px;
+  opacity: .9;
   padding-left: 20px;
   padding-right: 20px;
   position: absolute;
   right: 50px;
   top: 10px;
-  width: 15%;
+  width: 200px;
 }
 
 .header-container {
@@ -35,6 +37,7 @@ body {
 }
 
 .checkbox-item {
+  color: white;
   font-size: 18px;
   font-family: 'Helvetica Neue';
   text-align: left;
@@ -62,13 +65,13 @@ body {
   background-color:#cbe6a3;
   border: none;
   padding: 10px;
-  width: 90%;
+  width: 98%;
   transition: all 0.5s;
   text-align: center;
   cursor: pointer;
   font-size:24px;
   color: black;
-  margin-left: 10px;
+  margin: 0 auto;
 }
 
 .add-location-btn span {
@@ -99,35 +102,40 @@ body {
 .footer {
   position:absolute;
   background-color: black;
-  height: 5%;
+  height: 4.5vh;
   width:100%;
   color: white;
+  bottom: 0px;
+}
+
+.footer a {
+  color: white;
+
 }
 
-/* The Modal (background) */
+/* Modal */
+
 .modal-show {
-    display: block; /* Hidden by default */
-    position: fixed; /* Stay in place */
-    z-index: 1; /* Sit on top */
-    padding-top: 100px; /* Location of the box */
+    display: block;
+    position: fixed;
+    z-index: 1;
+    padding-top: 100px;
     left: 0;
     top: 0;
-    width: 100%; /* Full width */
-    height: 100%; /* Full height */
-    overflow: auto; /* Enable scroll if needed */
-    background-color: rgb(0,0,0); /* Fallback color */
-    background-color: rgba(0,0,0,.6); /* Black w/ opacity */
+    width: 100%;
+    height: 100%;
+    overflow: auto;
+    background-color: rgb(0,0,0);
+    background-color: rgba(0,0,0,.6);
 }
 
 .modal-hide {
-      display: none; /* Hidden by default */
+      display: none;
 }
 
-/* Modal Content */
 .modal-content {
     position: relative;
     background-color: #fefefe;
-    opacity: 1;
     margin: auto;
     padding: 0;
     border: 1px solid #888;
@@ -181,9 +189,44 @@ body {
   color: black;
 }
 
+.modal-body p, label {
+  padding: 0;
+  margin: 5px 0;
+  color: black;
+  font-size:20px;
+}
+
 .add-location-map {
+  position: absolute;
+  right: 10px;
+  top: 100px;
   border: 2px solid black;
-  width: 35%;
-  height: 40vh;
+  width: 50%;
+  height: 50vh;
   float: right;
 }
+.checkbox-item-2 {
+  color: black;
+  font-size: 18px;
+  font-family: 'Helvetica Neue';
+  text-align: left;
+}
+
+.submit-btn {
+  align-self: center;
+  background-color: #5cb85c;
+  border-radius: 0.6em;
+  color: white;
+  display: flex;
+  font-family: 'Montserrat', sans-serif;
+  font-size: 1rem;
+  font-weight: 400;
+  font-weight: 700;
+  line-height: 1;
+  margin-top: 10px;
+  padding: 1.2em 2.8em;
+  text-align: center;
+  text-decoration: none;
+}
+
+/*MENU*/
diff --git a/src/index.js b/src/index.js
index 1f8d05f..e9de28f 100644
--- a/src/index.js
+++ b/src/index.js
@@ -1,33 +1,47 @@
 import { render } from 'inferno'
 import App from './App'
-import initGMap from './map'
+import { fetchCompanyData } from './map'
+import mori from 'mori'
 import './index.css'
 
 const initialState = {
-  classes: 'modal-hide',
+  isModalShowing: false,
+  isMenuShowing: false,
   fname: '',
   lname: '',
   email: ''
 }
 
-let appState = initialState
+// CURRENT_STATE is always the current state of the application
+window.CURRENT_STATE = null
+// NEXT_STATE is the next state the application should be in
+// Start it off with a PDS version of our initialState object.
+window.NEXT_STATE = mori.toClj(initialState)
 
-const rootEl = document.getElementById('app')
+const rootEl = document.getElementById('appContainer')
+let renderCount = 0
 
 function startInfernoRenderLoop () {
-  render(App(appState), rootEl)
-  window.requestAnimationFrame(startInfernoRenderLoop)
+  // Only trigger a render if CURRENT_STATE and NEXT_STATE are different.
+  // NOTE: checking deep equality of a persistent data structure is a fast and
+  //       cheap operation, even for large data structures
+  if (!mori.equals(window.CURRENT_STATE, window.NEXT_STATE)) {
+    // next state is now our current state
+    window.CURRENT_STATE = window.NEXT_STATE
+    // render(App(window.CURRENT_STATE), rootEl)
+    render(<App imdata={window.CURRENT_STATE} />, rootEl)
+    renderCount = renderCount + 1
+    // console.log('Render #' + renderCount)
+  }
+  window.requestAnimationFrame(render)
 }
 
-window.requestAnimationFrame(startInfernoRenderLoop)
+window.requestAnimationFrame(render)
 
 // entry point for the whole enchilada
 function globalInit () {
+  fetchCompanyData()
   startInfernoRenderLoop()
 }
 
 window.addEventListener('load', globalInit)
-
-window.INIT_GMAP = initGMap
-
-export default appState
diff --git a/src/map.js b/src/map.js
index a2a7395..25adce5 100644
--- a/src/map.js
+++ b/src/map.js
@@ -3,99 +3,98 @@
 import './markerclusterer.js'
 import $ from './zepto-1.2.0.js'
 
-var companyObj = []
-
-function fetchJSONdata (data) {
-  data.forEach(function (item) {
-    companyObj.push({company: item.company, lat: item.lat, lng: item.lng, allowsOpenCarry: item.allowsOpenCarry, allowsConcealedCarry: item.allowsConcealedCarry})
+let googleMapScriptLoaded = false
+let companyDataIsLoaded = false
+let theMap = null
+let theSecondMap = null
+let mapMarkers = {}
+let markerCluster = null
+let markersArr = []
+let theInfoWindow = null
+let companies = {}
+let companiesObj = {}
+
+function fetchCompanyDataSuccess (data) {
+  data.forEach(function (company) {
+    companiesObj[company.id] = company
   })
-  console.log(companyObj)
-  console.log('SUCCESS!!')
-  buildLocations()
-  console.log('locations built')
-  buildInfoWindow()
-  console.log('info built')
+
+  companyDataIsLoaded = true
+  initGMap()
 }
 
-function handleError (error) {
+function fetchCompanyDataError (error) {
   console.log(error)
 }
 
-$.ajax({
-  type: 'GET',
-  url: '../data/locations.json',
-  // type of data we are expecting in return:
-  dataType: 'json',
-  success: fetchJSONdata,
-  error: handleError
-})
-
-var locations = []
-
-function buildLocations () {
-  companyObj.map(function (obj) {
-    return locations.push({
-      lat: obj.lat,
-      lng: obj.lng
-    })
+function fetchCompanyData () {
+  $.ajax({
+    type: 'GET',
+    url: '../data/locations.json',
+    // type of data we are expecting in return:
+    dataType: 'json',
+    success: fetchCompanyDataSuccess,
+    error: fetchCompanyDataError
   })
 }
 
-function buildInfoWindow () {
-  var companyName = ''
-  var allowsOpenCarry = null
-  var allowsConcealedCarry = null
-  companyObj.forEach(function (item) {
-    companyName = item.company
-    allowsOpenCarry = item.allowsOpenCarry
-    allowsConcealedCarry = item.allowsConcealedCarry
-    contentString = '<h1 id="firstHeading" class="firstHeading">' + companyName + '</h1>' + '<div id="bodyContent">' +
-      '<p> Is Open Carry Allowed?</p>' + '<b>' + allowsOpenCarry + '</b>' +
-      '<p> Is Concealed Carry Allowed?</p>' + '<b>' + allowsConcealedCarry + '</b>' + '</div>'
-    return contentString
-  })
-}
+function buildInfoWindow (company) {
+  var html = '<h1 id="firstHeading" class="firstHeading">' + company.company +
+  '</h1>' + '<div id="bodyContent">' + '<p> Is Open Carry Allowed?</p>' +
+  '<b>' + company.allowsOpenCarry + '</b>' + '<p> Is Concealed Carry Allowed?</p>' +
+  '<b>' + company.allowsConcealedCarry + '</b>' + '</div>'
 
-var contentString = ''
+  return html
+}
 
-function initGMap () {
-  var map = new google.maps.Map(document.getElementById('map'), {
-    zoom: 11,
-    center: {lat: 29.762589, lng: -95.364761}
-  })
+const HOUSTON_LAT = 29.762589
+const HOUSTON_LNG = -95.364761
+const MAP_CENTER = {lat: HOUSTON_LAT, lng: HOUSTON_LNG}
 
-  var map2 = new google.maps.Map(document.getElementById('map2'), {
-    zoom: 10,
-    center: {lat: 29.785237, lng: -95.421753}
-  })
+function clickMarker (companyId) {
+  if (!theInfoWindow) {
+    theInfoWindow = new google.maps.InfoWindow({
+      content: ''
+    })
+  }
+  // - get the company
+  let company = companiesObj[companyId]
+  // - build the infoWindow HTML
+  var infoWindowHtml = buildInfoWindow(company)
+  theInfoWindow.setContent(infoWindowHtml)
+  // - show the infoWindow
+  var marker = mapMarkers[companyId]
+  theInfoWindow.open(theMap, marker)
+}
 
-  var infowindow = new google.maps.InfoWindow({
-    content: contentString
-  })
+function initGMap () {
+  // only initialize the map when both the company data is loaded and the
+  // google map script is loaded
+  if (!googleMapScriptLoaded || !companyDataIsLoaded) return
 
-  // Add some markers to the map.
-  // Note: The code uses the JavaScript Array.prototype.map() method to
-  // create an array of markers based on a given "locations" array.
-  // The map() method here has nothing to do with the Google Maps API.
-  var markers = locations.map(function (location, i) {
-    return new google.maps.Marker({
-      position: location,
-      animation: google.maps.Animation.DROP
-    })
+  theMap = new google.maps.Map(document.getElementById('mapContainer'), {
+    zoom: 11,
+    center: MAP_CENTER
   })
 
-  function addInfoWindowClick () {
-    markers.forEach(function (marker) {
-      marker.addListener('click', function () {
-        infowindow.open(map, marker)
-      })
+  for (let id in companiesObj) {
+    if (!companiesObj.hasOwnProperty(id)) continue
+    let marker = new google.maps.Marker({
+      position: {lat: companiesObj[id].lat, lng: companiesObj[id].lng}
     })
+    marker.addListener('click', clickMarker.bind(null, id))
+    markersArr.push(marker)
+    mapMarkers[id] = marker
   }
-  addInfoWindowClick()
 
   // Add a marker clusterer to manage the markers.
-  var markerCluster = new MarkerClusterer(map, markers,
+  markerCluster = new MarkerClusterer(theMap, mapMarkers,
       {imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'})
 }
 
-export default initGMap
+window.GMAP_SCRIPT_LOADED = function () {
+  googleMapScriptLoaded = true
+  initGMap()
+}
+
+export { fetchCompanyData }
diff --git a/yarn.lock b/yarn.lock
index e0f28d8..ca7520e 100644
--- a/yarn.lock
+++ b/yarn.lock
@@ -2902,7 +2902,7 @@ indexof@0.0.1:
   version "0.0.1"
   resolved "https://registry.yarnpkg.com/indexof/-/indexof-0.0.1.tgz#82dc336d232b9062179d05ab3293a66059fd435d"
 
-inferno-component@3.6.4, inferno-component@^3.5.4:
+inferno-component@^3.5.4, inferno-component@^3.6.4:
   version "3.6.4"
   resolved "https://registry.yarnpkg.com/inferno-component/-/inferno-component-3.6.4.tgz#8645383bac1965559a37d493e142295ac11731e7"
   dependencies:
@@ -4044,6 +4044,10 @@ mkdirp@0.5.1, mkdirp@0.5.x, "mkdirp@>=0.5 0", mkdirp@^0.5.0, mkdirp@^0.5.1, mkdi
   dependencies:
     minimist "0.0.8"
 
+mori@0.3.2:
+  version "0.3.2"
+  resolved "https://registry.yarnpkg.com/mori/-/mori-0.3.2.tgz#1a53da165287f3bef0cab62398c4931bece80a3f"
+
 ms@2.0.0:
   version "2.0.0"
   resolved "https://registry.yarnpkg.com/ms/-/ms-2.0.0.tgz#5608aeadfc00be6c2901df5f9861788de0d597c8"
